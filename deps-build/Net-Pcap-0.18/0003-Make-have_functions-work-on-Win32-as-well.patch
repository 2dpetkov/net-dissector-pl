From b10564cf443e6357c300ca716522e7f88bff7c8a Mon Sep 17 00:00:00 2001
From: Max Maischein <corion@corion.net>
Date: Tue, 22 Mar 2011 21:57:16 +0100
Subject: [PATCH 3/5] Make have_functions() work on Win32 as well

---
 Makefile.PL |   33 ++++++++++++++++++++++++++++-----
 1 files changed, 28 insertions(+), 5 deletions(-)

diff --git a/Makefile.PL b/Makefile.PL
index b966faa..ca76b8e 100644
--- a/Makefile.PL
+++ b/Makefile.PL
@@ -4,6 +4,7 @@ use Cwd;
 use ExtUtils::MakeMaker;
 eval "use ExtUtils::MakeMaker::Coverage";
 use File::Spec;
+use File::Basename;
 
 
 my ($DEBUG, %options, $DEVNULL, $is_Win32, $has_Win32);
@@ -533,13 +534,35 @@ sub have_functions {
     my @funcs = ();
     print "detecting available functions... ";
 
-    my @paths = DynaLoader::dl_findfile(qw(-lpcap));
-    my $libref = DynaLoader::dl_load_file($paths[0]);
-
+    my @paths = DynaLoader::dl_findfile(split /\s+/, $options{LIBS});
+    die "Couldn't find any library file satisfying '$options{LIBS}'"
+        unless @paths;
+    my $libfile = $paths[0];
+    
+    # On Win32, we assume that the lib file will not be statically linked
+    # but will be a thin wrapper for a similarly named .dll file.
+    # This is not universal but works in many cases
+    # This assumes that a library -l$foo will map to lib$foo.a
+    # through DynaLoader. We then try to find and load $foo.dll in $ENV{PATH}
+    if ($has_Win32) {        
+        (my $dll = basename $libfile) =~ s/\.\w+$//;
+        $dll =~ s/^lib//;
+        $dll .= '.dll';
+        
+        ($libfile) = grep { -f } map { File::Spec->catfile($_,$dll) } File::Spec->path;
+        die "'$dll' not found in PATH"
+            unless $libfile;
+    };
+    warn "Using '$libfile' as potential symbol candidate";
+
+    my $libref = DynaLoader::dl_load_file($libfile);
+    warn "Couldn't load $libfile via DynaLoader ($^E)"
+        unless $libref;
     for my $func (@_) {
         my $symref = DynaLoader::dl_find_symbol($libref, $func);
-        push @funcs, $func if defined $symref
-    }
+        push @funcs, $func if defined $symref;
+        #print "$func", $symref ? "" : " NOT", " found\n";
+    };
 
     print "ok\n";
     return @funcs
-- 
1.6.5.1.1367.gcd48

